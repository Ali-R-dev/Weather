{"version":3,"mappings":"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","names":["API_ENDPOINT","REVERSE_GEOCODING_ENDPOINT","searchLocations","query","params","url","response","error","reverseGeocode","latitude","longitude","data","LocationSource","LocationService","__publicField","savedLocationsStr","defaultLocationStr","recentLocationsStr","resolve","lastLocationStr","lastLocation","geoLocation","ipLocation","location","source","geoDetails","loc","updatedLocations","locationId","defaultLoc","filteredRecent","updatedRecent","reject","position","event","callback","listener","locationService","useLocationService","currentLocation","setCurrentLocation","useState","defaultLocation","setDefaultLocation","savedLocations","setSavedLocations","recentLocations","setRecentLocations","locationSource","setLocationSource","isInitialized","setIsInitialized","useEffect","handleLocationChanged","handleDefaultChanged","handleSavedLocationsChanged","locations","handleRecentLocationsChanged","handleInitializationComplete","LocationContext","createContext","LocationProvider","children","locationState","useLocation","context","useContext","BASE_URL","fetchWeatherData","timezone","WeatherContext","WeatherProvider","lastUpdated","setLastUpdated","useQuery","jsx","useWeather","getThemeFromWeatherCode","code","isDay","weatherThemes","applyTheme","themeOrCode","theme","finalThemeConfig","className","defaultContext","ThemeContext","useTheme","ThemeProvider","currentTheme","setCurrentTheme","handleApplyTheme","AppConfig","value","toUnit","fromUnit","type","unit","config","temperature","humidity","tempCelsius","thresholds","defaultSettings","SettingsContext","SettingsProvider","settings","setSettings","savedSettings","updateSettings","newSettings","useSettings","UIContext","UIProvider","animationIntensity","setAnimationIntensity","reducedMotion","setReducedMotion","highContrast","setHighContrast","compactMode","setCompactMode","accentColor","setAccentColor","isLoading","setIsLoading","toasts","setToasts","prefersReducedMotion","handleChange","toggleHighContrast","newValue","toggleCompactMode","showToast","message","id","prev","toast","handleSetAccentColor","color","jsxs","WeatherLoadingScreen","fadeOut","setFadeOut","hidden","setHidden","timer","styles","_","i","ErrorBoundary","Component","errorInfo","HomePage","lazy","__vitePreload","Footer","PrivacyPolicyModal","App","privacyModalVisible","setPrivacyModalVisible","initialLoading","setInitialLoading","metaThemeColor","meta","AppContent","Fragment","Suspense","rootElement","queryClient","QueryClient","createRoot","StrictMode","QueryClientProvider","ReactQueryDevtools"],"ignoreList":[],"sources":["../../src/services/geocodingService.ts","../../src/services/LocationService.ts","../../src/context/LocationContext.tsx","../../src/services/weatherService.ts","../../src/context/WeatherContext.tsx","../../src/utils/themeUtils.ts","../../src/styles/themes.ts","../../src/context/ThemeContext.tsx","../../src/config/appConfig.ts","../../src/context/SettingsContext.tsx","../../src/context/UIContext.tsx","../../src/components/common/WeatherLoadingScreen.tsx","../../src/components/common/ErrorBoundary.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import type { GeocodingResult } from '../types/geocoding.types';\nexport type { GeocodingResult };\n\nconst API_ENDPOINT = import.meta.env.VITE_GEOCODING_API_URL;\nconst REVERSE_GEOCODING_ENDPOINT = import.meta.env.VITE_REVERSE_GEOCODING_API_URL;\n\ninterface GeocodingParams {\n  name?: string;\n  count?: number;\n  language?: string;\n  format?: string;\n}\n\n/**\n * Search for locations by name using Open-Meteo Geocoding API\n */\nexport async function searchLocations(\n  query: string,\n  params: Partial<GeocodingParams> = {}\n): Promise<GeocodingResult[]> {\n  if (!query || query.trim().length < 2) return [];\n\n  const url = new URL(API_ENDPOINT);\n  url.searchParams.append('name', query);\n  url.searchParams.append('count', (params.count || 10).toString());\n  url.searchParams.append('language', params.language || 'en');\n  url.searchParams.append('format', params.format || 'json');\n\n  try {\n    const response = await fetch(url.toString());\n\n    if (!response.ok) {\n      throw new Error(`Geocoding API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data.results || [];\n  } catch (error) {\n    console.error('Failed to search locations:', error);\n    return [];\n  }\n}\n\n/**\n * Get location information from coordinates using Nominatim API\n */\nexport async function reverseGeocode(\n  latitude: number,\n  longitude: number\n): Promise<GeocodingResult | null> {\n  try {\n    const url = new URL(REVERSE_GEOCODING_ENDPOINT);\n    url.searchParams.append('lat', latitude.toString());\n    url.searchParams.append('lon', longitude.toString());\n    url.searchParams.append('format', 'json');\n    url.searchParams.append('zoom', '10'); // City level zoom\n    url.searchParams.append('addressdetails', '1');\n\n    const response = await fetch(url.toString(), {\n      headers: {\n        'User-Agent': 'Weather App (https://github.com/yourusername/weather-app)', // Required by Nominatim ToS\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Reverse geocoding error: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    // Convert Nominatim response format to our GeocodingResult format\n    return {\n      id: parseInt(data.place_id), // Nominatim place_id as our id\n      name:\n        data.address.city ||\n        data.address.town ||\n        data.address.village ||\n        data.address.municipality ||\n        data.name,\n      country: data.address.country,\n      admin1: data.address.state || data.address.province,\n      admin2: data.address.county || data.address.district,\n      latitude: parseFloat(data.lat),\n      longitude: parseFloat(data.lon),\n      timezone: 'auto', // We don't get timezone from Nominatim\n    };\n  } catch (error) {\n    console.error('Failed to reverse geocode:', error);\n    return null;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { reverseGeocode } from './geocodingService';\n\n/**\n * Type for location information used throughout the app\n */\nexport interface LocationInfo {\n  latitude: number;\n  longitude: number;\n  name?: string;\n  country?: string;\n  admin1?: string; // State/province\n  admin2?: string; // County/district\n  id?: number; // Optional ID for saved locations\n}\n\n/**\n * Represents a saved location with mandatory ID and name\n */\nexport interface SavedLocation extends LocationInfo {\n  id: number;\n  name: string;\n  country: string;\n  isDefault?: boolean;\n}\n\n/**\n * Enum representing the source of a location\n * Useful for tracking how a location was selected and for analytics\n */\nexport enum LocationSource {\n  DEFAULT = 'default', // User's explicitly chosen default location\n  SAVED = 'saved', // From user's saved locations\n  RECENT = 'recent', // From recently used locations\n  SEARCH = 'search', // From search results\n  GEOLOCATION = 'geolocation', // From device GPS\n  IP_LOCATION = 'ip-location', // IP-based location detection\n  FALLBACK = 'fallback', // Default fallback\n}\n\n/**\n * Event types that LocationService can emit\n */\nexport enum LocationEventType {\n  LOCATION_CHANGED = 'location-changed',\n  DEFAULT_CHANGED = 'default-changed',\n  SAVED_LOCATIONS_CHANGED = 'saved-locations-changed',\n  RECENT_LOCATIONS_CHANGED = 'recent-locations-changed',\n  INITIALIZATION_COMPLETE = 'initialization-complete',\n}\n\n/**\n * Listener function type definition\n */\ntype LocationEventListener = (data: any) => void;\n\n/**\n * LocationService - Single source of truth for all location-related functionality\n */\nclass LocationService {\n  private currentLocation: LocationInfo | null = null;\n  private defaultLocation: SavedLocation | null = null;\n  private savedLocations: SavedLocation[] = [];\n  private recentLocations: SavedLocation[] = [];\n  private locationSource: LocationSource | null = null;\n  private isInitialized: boolean = false;\n  private isInitializing: boolean = false;\n  private readonly MAX_RECENT_LOCATIONS = 5;\n\n  // Event listeners for different event types\n  private eventListeners: {\n    [key in LocationEventType]: LocationEventListener[];\n  } = {\n    [LocationEventType.LOCATION_CHANGED]: [],\n    [LocationEventType.DEFAULT_CHANGED]: [],\n    [LocationEventType.SAVED_LOCATIONS_CHANGED]: [],\n    [LocationEventType.RECENT_LOCATIONS_CHANGED]: [],\n    [LocationEventType.INITIALIZATION_COMPLETE]: [],\n  };\n\n  constructor() {\n    console.log('LocationService: Initializing');\n    this.loadSavedData();\n    this.initialize();\n  }\n\n  /**\n   * Load all location-related data from localStorage\n   */\n  private loadSavedData(): void {\n    try {\n      // Load saved locations\n      const savedLocationsStr = localStorage.getItem('savedLocations');\n      if (savedLocationsStr) {\n        this.savedLocations = JSON.parse(savedLocationsStr);\n        console.log('LocationService: Loaded saved locations', this.savedLocations);\n      }\n\n      // Load default location\n      const defaultLocationStr = localStorage.getItem('defaultLocation');\n      if (defaultLocationStr) {\n        this.defaultLocation = JSON.parse(defaultLocationStr);\n        console.log('LocationService: Loaded default location', this.defaultLocation);\n      }\n\n      // Load recent locations\n      const recentLocationsStr = localStorage.getItem('recentLocations');\n      if (recentLocationsStr) {\n        this.recentLocations = JSON.parse(recentLocationsStr);\n        console.log('LocationService: Loaded recent locations', this.recentLocations);\n      }\n    } catch (error) {\n      console.error('LocationService: Error loading saved data', error);\n    }\n  }\n\n  /**\n   * Initialize location with priority chain\n   * 1. Default location\n   * 2. Last used location\n   * 3. Any saved location\n   * 4. Geolocation\n   * 5. IP-based location\n   * 6. Fallback\n   */\n  public async initialize(): Promise<LocationInfo> {\n    if (this.isInitialized) {\n      return this.currentLocation!;\n    }\n\n    if (this.isInitializing) {\n      return new Promise((resolve) => {\n        this.addEventListener(LocationEventType.INITIALIZATION_COMPLETE, () => {\n          resolve(this.currentLocation!);\n        });\n      });\n    }\n\n    this.isInitializing = true;\n    console.log('LocationService: Starting location initialization with priority chain');\n\n    try {\n      // Priority 1: Default location\n      if (this.defaultLocation) {\n        console.log('LocationService: Using default location');\n        await this.setLocation(this.defaultLocation, LocationSource.DEFAULT);\n        this.completeInitialization();\n        return this.currentLocation!;\n      }\n\n      // Priority 2: Last used location\n      const lastLocationStr = localStorage.getItem('lastLocation');\n      if (lastLocationStr) {\n        try {\n          const lastLocation = JSON.parse(lastLocationStr);\n          console.log('LocationService: Using last used location');\n          await this.setLocation(lastLocation, LocationSource.RECENT);\n          this.completeInitialization();\n          return this.currentLocation!;\n        } catch (error) {\n          console.warn('LocationService: Error parsing last location', error);\n        }\n      }\n\n      // Priority 3: Any saved location\n      if (this.savedLocations.length > 0) {\n        console.log('LocationService: Using first saved location');\n        await this.setLocation(this.savedLocations[0], LocationSource.SAVED);\n        this.completeInitialization();\n        return this.currentLocation!;\n      }\n\n      // Priority 4: Geolocation\n      try {\n        const geoLocation = await this.getGeolocation();\n        console.log('LocationService: Using geolocation');\n        await this.setLocation(geoLocation, LocationSource.GEOLOCATION);\n        this.completeInitialization();\n        return this.currentLocation!;\n      } catch (error) {\n        console.warn('LocationService: Geolocation error', error);\n      }\n\n      // Priority 5: IP-based location\n      try {\n        const ipLocation = await this.getIPLocation();\n        console.log('LocationService: Using IP-based location');\n        await this.setLocation(ipLocation, LocationSource.IP_LOCATION);\n        this.completeInitialization();\n        return this.currentLocation!;\n      } catch (error) {\n        console.warn('LocationService: IP location error', error);\n      }\n\n      // Priority 6: Fallback location (New York)\n      console.log('LocationService: Using fallback location (New York)');\n      await this.setLocation(\n        {\n          latitude: 40.7128,\n          longitude: -74.006,\n          name: 'New York City',\n          country: 'United States',\n          admin1: 'New York',\n        },\n        LocationSource.FALLBACK\n      );\n\n      this.completeInitialization();\n      return this.currentLocation!;\n    } catch (error) {\n      console.error('LocationService: Initialization error', error);\n      this.isInitializing = false;\n      throw error;\n    }\n  }\n\n  private completeInitialization(): void {\n    this.isInitialized = true;\n    this.isInitializing = false;\n    this.emitEvent(LocationEventType.INITIALIZATION_COMPLETE, this.currentLocation);\n    console.log('LocationService: Initialization complete');\n  }\n\n  /**\n   * Get the current location\n   */\n  public getCurrentLocation(): LocationInfo | null {\n    return this.currentLocation;\n  }\n\n  /**\n   * Get the source of the current location\n   */\n  public getCurrentLocationSource(): LocationSource | null {\n    return this.locationSource;\n  }\n\n  /**\n   * Set the current location\n   */\n  public async setLocation(location: LocationInfo, source: LocationSource): Promise<void> {\n    // Enhanced location with name if it doesn't have one\n    if (!location.name && location.latitude && location.longitude) {\n      try {\n        const geoDetails = await reverseGeocode(location.latitude, location.longitude);\n        if (geoDetails) {\n          location = {\n            ...location,\n            name: geoDetails.name,\n            country: geoDetails.country,\n            admin1: geoDetails.admin1,\n            admin2: geoDetails.admin2,\n          };\n        }\n      } catch (error) {\n        console.warn('LocationService: Error fetching location details', error);\n      }\n    }\n\n    console.log(\n      `LocationService: Setting location to ${\n        location.name || 'unnamed location'\n      } from source: ${source}`\n    );\n    this.currentLocation = location;\n    this.locationSource = source;\n\n    // Save as last used location\n    localStorage.setItem('lastLocation', JSON.stringify(location));\n\n    // If it has a name and id, add to recent locations\n    if (location.name && location.id) {\n      this.addToRecentLocations(location as SavedLocation);\n    }\n\n    this.emitEvent(LocationEventType.LOCATION_CHANGED, { location, source });\n  }\n\n  /**\n   * Save a location to the user's saved locations\n   */\n  public saveLocation(location: SavedLocation): void {\n    const exists = this.savedLocations.some((loc) => loc.id === location.id);\n\n    if (!exists) {\n      const updatedLocations = [...this.savedLocations, location];\n      this.savedLocations = updatedLocations;\n      localStorage.setItem('savedLocations', JSON.stringify(updatedLocations));\n\n      console.log('LocationService: Location saved', location);\n      this.emitEvent(LocationEventType.SAVED_LOCATIONS_CHANGED, this.savedLocations);\n\n      // If this is the first location, make it default\n      if (updatedLocations.length === 1 && !this.defaultLocation) {\n        this.setDefaultLocation(location.id);\n      }\n    }\n  }\n\n  /**\n   * Set a location as the default\n   */\n  public setDefaultLocation(locationId: number): void {\n    const location = this.savedLocations.find((loc) => loc.id === locationId);\n\n    if (location) {\n      const defaultLoc = { ...location, isDefault: true };\n      this.defaultLocation = defaultLoc;\n      localStorage.setItem('defaultLocation', JSON.stringify(defaultLoc));\n\n      console.log('LocationService: Default location set', defaultLoc);\n      this.emitEvent(LocationEventType.DEFAULT_CHANGED, defaultLoc);\n\n      // Also change current location to this default\n      this.setLocation(defaultLoc, LocationSource.DEFAULT);\n    }\n  }\n\n  /**\n   * Remove a location from saved locations\n   */\n  public removeLocation(locationId: number): void {\n    const updatedLocations = this.savedLocations.filter((loc) => loc.id !== locationId);\n    this.savedLocations = updatedLocations;\n    localStorage.setItem('savedLocations', JSON.stringify(updatedLocations));\n\n    // If default location was removed, update default\n    if (this.defaultLocation && this.defaultLocation.id === locationId) {\n      this.defaultLocation = null;\n      localStorage.removeItem('defaultLocation');\n\n      // If there are other locations, make the first one default\n      if (updatedLocations.length > 0) {\n        this.setDefaultLocation(updatedLocations[0].id);\n      }\n    }\n\n    console.log('LocationService: Location removed', locationId);\n    this.emitEvent(LocationEventType.SAVED_LOCATIONS_CHANGED, this.savedLocations);\n  }\n\n  /**\n   * Add a location to recently used\n   */\n  private addToRecentLocations(location: SavedLocation): void {\n    const filteredRecent = this.recentLocations.filter((loc) => loc.id !== location.id);\n    const updatedRecent = [location, ...filteredRecent].slice(0, this.MAX_RECENT_LOCATIONS);\n\n    this.recentLocations = updatedRecent;\n    localStorage.setItem('recentLocations', JSON.stringify(updatedRecent));\n\n    this.emitEvent(LocationEventType.RECENT_LOCATIONS_CHANGED, this.recentLocations);\n  }\n\n  /**\n   * Remove from recently used locations\n   */\n  public removeFromRecentLocations(locationId: number): void {\n    const updatedRecent = this.recentLocations.filter((loc) => loc.id !== locationId);\n    this.recentLocations = updatedRecent;\n    localStorage.setItem('recentLocations', JSON.stringify(updatedRecent));\n\n    this.emitEvent(LocationEventType.RECENT_LOCATIONS_CHANGED, this.recentLocations);\n  }\n\n  /**\n   * Get browser geolocation\n   */\n  public async getGeolocation(): Promise<LocationInfo> {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('Geolocation not supported'));\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const location: LocationInfo = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          };\n\n          // Try to get the location name\n          try {\n            const geoDetails = await reverseGeocode(location.latitude, location.longitude);\n            if (geoDetails) {\n              location.name = geoDetails.name;\n              location.country = geoDetails.country;\n              location.admin1 = geoDetails.admin1;\n              location.admin2 = geoDetails.admin2;\n              location.id = geoDetails.id;\n            }\n          } catch (error) {\n            console.warn('LocationService: Error fetching location name', error);\n          }\n\n          resolve(location);\n        },\n        (error) => {\n          reject(error);\n        },\n        { timeout: 10000, maximumAge: 60000 }\n      );\n    });\n  }\n\n  /**\n   * Get location from IP address\n   */\n  public async getIPLocation(): Promise<LocationInfo> {\n    const response = await fetch('https://ipapi.co/json/');\n    if (!response.ok) {\n      throw new Error('IP geolocation failed');\n    }\n\n    const data = await response.json();\n    return {\n      latitude: data.latitude,\n      longitude: data.longitude,\n      name: data.city,\n      country: data.country_name,\n      admin1: data.region,\n    };\n  }\n\n  /**\n   * Get all saved locations\n   */\n  public getSavedLocations(): SavedLocation[] {\n    return [...this.savedLocations];\n  }\n\n  /**\n   * Get recent locations\n   */\n  public getRecentLocations(): SavedLocation[] {\n    return [...this.recentLocations];\n  }\n\n  /**\n   * Get default location\n   */\n  public getDefaultLocation(): SavedLocation | null {\n    return this.defaultLocation;\n  }\n\n  /**\n   * Event handling methods\n   */\n  public addEventListener(event: LocationEventType, callback: LocationEventListener): void {\n    this.eventListeners[event].push(callback);\n  }\n\n  public removeEventListener(event: LocationEventType, callback: LocationEventListener): void {\n    this.eventListeners[event] = this.eventListeners[event].filter(\n      (listener) => listener !== callback\n    );\n  }\n\n  private emitEvent(event: LocationEventType, data: any): void {\n    this.eventListeners[event].forEach((callback) => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error(`LocationService: Error in ${event} event listener`, error);\n      }\n    });\n  }\n\n  /**\n   * Check if the service has finished initializing\n   */\n  public isInitializationComplete(): boolean {\n    return this.isInitialized;\n  }\n\n  /**\n   * Wait for initialization to complete\n   */\n  public async waitForInitialization(): Promise<LocationInfo> {\n    if (this.isInitialized && this.currentLocation) {\n      return this.currentLocation;\n    }\n\n    return new Promise((resolve) => {\n      this.addEventListener(LocationEventType.INITIALIZATION_COMPLETE, () => {\n        resolve(this.currentLocation!);\n      });\n\n      // If not initializing yet, start initialization\n      if (!this.isInitializing) {\n        this.initialize();\n      }\n    });\n  }\n}\n\n// Create singleton instance\nexport const locationService = new LocationService();\n\n/**\n * React hook for accessing LocationService\n */\nimport { useState, useEffect } from 'react';\n\nexport function useLocationService() {\n  const [currentLocation, setCurrentLocation] = useState<LocationInfo | null>(\n    locationService.getCurrentLocation()\n  );\n  const [defaultLocation, setDefaultLocation] = useState<SavedLocation | null>(\n    locationService.getDefaultLocation()\n  );\n  const [savedLocations, setSavedLocations] = useState<SavedLocation[]>(\n    locationService.getSavedLocations()\n  );\n  const [recentLocations, setRecentLocations] = useState<SavedLocation[]>(\n    locationService.getRecentLocations()\n  );\n  const [locationSource, setLocationSource] = useState<LocationSource | null>(\n    locationService.getCurrentLocationSource()\n  );\n  const [isInitialized, setIsInitialized] = useState<boolean>(\n    locationService.isInitializationComplete()\n  );\n\n  useEffect(() => {\n    // Setup event listeners\n    const handleLocationChanged = (data: { location: LocationInfo; source: LocationSource }) => {\n      setCurrentLocation(data.location);\n      setLocationSource(data.source);\n    };\n\n    const handleDefaultChanged = (location: SavedLocation) => {\n      setDefaultLocation(location);\n    };\n\n    const handleSavedLocationsChanged = (locations: SavedLocation[]) => {\n      setSavedLocations([...locations]);\n    };\n\n    const handleRecentLocationsChanged = (locations: SavedLocation[]) => {\n      setRecentLocations([...locations]);\n    };\n\n    const handleInitializationComplete = () => {\n      setIsInitialized(true);\n      setCurrentLocation(locationService.getCurrentLocation());\n      setLocationSource(locationService.getCurrentLocationSource());\n    };\n\n    // Register event listeners\n    locationService.addEventListener(LocationEventType.LOCATION_CHANGED, handleLocationChanged);\n    locationService.addEventListener(LocationEventType.DEFAULT_CHANGED, handleDefaultChanged);\n    locationService.addEventListener(\n      LocationEventType.SAVED_LOCATIONS_CHANGED,\n      handleSavedLocationsChanged\n    );\n    locationService.addEventListener(\n      LocationEventType.RECENT_LOCATIONS_CHANGED,\n      handleRecentLocationsChanged\n    );\n    locationService.addEventListener(\n      LocationEventType.INITIALIZATION_COMPLETE,\n      handleInitializationComplete\n    );\n\n    // If not initialized yet, trigger initialization\n    if (!locationService.isInitializationComplete()) {\n      locationService.initialize().catch((error) => {\n        console.error('Failed to initialize location service:', error);\n      });\n    }\n\n    // Cleanup listeners on unmount\n    return () => {\n      locationService.removeEventListener(\n        LocationEventType.LOCATION_CHANGED,\n        handleLocationChanged\n      );\n      locationService.removeEventListener(LocationEventType.DEFAULT_CHANGED, handleDefaultChanged);\n      locationService.removeEventListener(\n        LocationEventType.SAVED_LOCATIONS_CHANGED,\n        handleSavedLocationsChanged\n      );\n      locationService.removeEventListener(\n        LocationEventType.RECENT_LOCATIONS_CHANGED,\n        handleRecentLocationsChanged\n      );\n      locationService.removeEventListener(\n        LocationEventType.INITIALIZATION_COMPLETE,\n        handleInitializationComplete\n      );\n    };\n  }, []);\n\n  return {\n    // Current state\n    currentLocation,\n    defaultLocation,\n    savedLocations,\n    recentLocations,\n    locationSource,\n    isInitialized,\n\n    // Actions\n    setLocation: async (location: LocationInfo, source: LocationSource = LocationSource.SEARCH) =>\n      await locationService.setLocation(location, source),\n    setDefaultLocation: (locationId: number) => locationService.setDefaultLocation(locationId),\n    saveLocation: (location: SavedLocation) => locationService.saveLocation(location),\n    removeLocation: (locationId: number) => locationService.removeLocation(locationId),\n    removeFromRecentLocations: (locationId: number) =>\n      locationService.removeFromRecentLocations(locationId),\n    getGeolocation: async () => await locationService.getGeolocation(),\n  };\n}\n","import { createContext, useContext, ReactNode } from 'react';\nimport {\n  useLocationService,\n  LocationInfo,\n  SavedLocation,\n  LocationSource,\n} from '../services/LocationService';\n\n// Define the shape of our context\ninterface LocationContextType {\n  // Current state\n  currentLocation: LocationInfo | null;\n  defaultLocation: SavedLocation | null;\n  savedLocations: SavedLocation[];\n  recentLocations: SavedLocation[];\n  locationSource: LocationSource | null;\n  isInitialized: boolean;\n\n  // Actions\n  setLocation: (location: LocationInfo, source?: LocationSource) => Promise<void>;\n  setDefaultLocation: (locationId: number) => void;\n  saveLocation: (location: SavedLocation) => void;\n  removeLocation: (locationId: number) => void;\n  removeFromRecentLocations: (locationId: number) => void;\n  getGeolocation: () => Promise<LocationInfo>;\n}\n\n// Create context with undefined default value\nconst LocationContext = createContext<LocationContextType | undefined>(undefined);\n\n// Provider component\nexport function LocationProvider({ children }: { children: ReactNode }) {\n  // Use the hook from LocationService directly\n  const locationState = useLocationService();\n\n  return <LocationContext.Provider value={locationState}>{children}</LocationContext.Provider>;\n}\n\n// Consumer hook\nexport function useLocation(): LocationContextType {\n  const context = useContext(LocationContext);\n\n  if (context === undefined) {\n    throw new Error('useLocation must be used within a LocationProvider');\n  }\n\n  return context;\n}\n","import { WeatherData } from '../types/weather.types';\nimport { LocationInfo } from '../services/LocationService'; // Import LocationInfo\n\nconst BASE_URL = import.meta.env.VITE_API_URL;\n\nexport interface WeatherParams {\n  latitude: number;\n  longitude: number;\n  timezone?: string;\n}\n\nexport async function fetchWeatherData({\n  latitude,\n  longitude,\n  timezone = 'auto',\n}: WeatherParams): Promise<WeatherData> {\n  const url = new URL(BASE_URL);\n\n  // Set required parameters\n  url.searchParams.append('latitude', latitude.toString());\n  url.searchParams.append('longitude', longitude.toString());\n  url.searchParams.append('timezone', timezone);\n\n  // Set weather data we want to retrieve\n  url.searchParams.append(\n    'current',\n    'temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,weather_code,wind_speed_10m,wind_direction_10m,is_day,uv_index'\n  );\n  url.searchParams.append('hourly', 'temperature_2m,precipitation_probability,weather_code');\n  url.searchParams.append(\n    'daily',\n    'weather_code,temperature_2m_max,temperature_2m_min,precipitation_sum,precipitation_probability_max,wind_speed_10m_max,sunrise,sunset'\n  );\n\n  try {\n    const response = await fetch(url.toString());\n\n    if (!response.ok) {\n      throw new Error(`Weather API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Failed to fetch weather data:', error);\n    throw error;\n  }\n}\n\nexport const WeatherCacheService = {\n  saveToCache(data: WeatherData, location: LocationInfo) {\n    try {\n      localStorage.setItem('weatherCache', JSON.stringify(data));\n      localStorage.setItem('cachedLocation', JSON.stringify(location));\n      localStorage.setItem('cacheTimestamp', JSON.stringify(new Date().toISOString()));\n    } catch (e) {\n      console.warn('Failed to cache weather data:', e);\n    }\n  },\n\n  getFromCache() {\n    try {\n      const cachedData = localStorage.getItem('weatherCache');\n      const cachedLocation = localStorage.getItem('cachedLocation');\n      const cacheTimestamp = localStorage.getItem('cacheTimestamp');\n\n      return {\n        data: cachedData ? JSON.parse(cachedData) : null,\n        location: cachedLocation ? JSON.parse(cachedLocation) : null,\n        timestamp: cacheTimestamp ? new Date(JSON.parse(cacheTimestamp)) : null,\n      };\n    } catch (e) {\n      console.error('Failed to load cached weather data:', e);\n      return { data: null, location: null, timestamp: null };\n    }\n  },\n};\n","import { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { WeatherData } from '../types/weather.types';\nimport { useLocation } from './LocationContext'; // Use the location context\nimport { LocationInfo } from '../services/LocationService'; // Import LocationInfo\nimport { fetchWeatherData } from '../services/weatherService';\n\n// Define the shape of our weather context\ninterface WeatherContextType {\n  weatherData: WeatherData | null;\n  loading: boolean;\n  error: string | null;\n  lastUpdated: Date | null;\n  isOffline: boolean;\n  currentLocation: LocationInfo | null; // Add this property\n}\n\n// Create the context with undefined default\nconst WeatherContext = createContext<WeatherContextType | undefined>(undefined);\n\nexport function WeatherProvider({ children }: { children: ReactNode }) {\n  const { currentLocation, isInitialized } = useLocation();\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n\n  const query = useQuery<WeatherData, Error>({\n    queryKey: ['weather', currentLocation?.latitude, currentLocation?.longitude],\n    queryFn: () =>\n      fetchWeatherData({\n        latitude: currentLocation!.latitude,\n        longitude: currentLocation!.longitude,\n      }),\n    enabled: Boolean(currentLocation && isInitialized),\n    retry: 2,\n    staleTime: 5 * 60 * 1000,\n  });\n\n  useEffect(() => {\n    if (query.data) setLastUpdated(new Date());\n  }, [query.data]);\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        weatherData: query.data ?? null,\n        loading: query.isLoading,\n        error: query.error ? query.error.message : null,\n        lastUpdated,\n        isOffline: !navigator.onLine,\n        currentLocation,\n      }}\n    >\n      {children}\n    </WeatherContext.Provider>\n  );\n}\n\n// Consumer hook\nexport function useWeather(): WeatherContextType {\n  const context = useContext(WeatherContext);\n\n  if (context === undefined) {\n    throw new Error('useWeather must be used within a WeatherProvider');\n  }\n\n  return context;\n}\n","import { weatherThemes, WeatherTheme } from '../styles/themes';\n\n/**\n * Maps a weather code to the appropriate theme name\n */\nexport function getThemeFromWeatherCode(code: number, isDay: boolean): WeatherTheme {\n  // Clear weather\n  if (code === 0) {\n    return isDay ? 'sunny' : 'night-clear';\n  }\n\n  // Partly cloudy\n  if (code === 1 || code === 2) {\n    return isDay ? 'cloudy' : 'night-cloudy';\n  }\n\n  // Cloudy\n  if (code === 3) {\n    return isDay ? 'cloudy' : 'night-cloudy';\n  }\n\n  // Fog\n  if (code >= 45 && code <= 48) {\n    return isDay ? 'foggy' : 'night-foggy';\n  }\n\n  // Drizzle or light rain\n  if ((code >= 51 && code <= 55) || (code >= 61 && code <= 63)) {\n    return isDay ? 'rainy' : 'night-rainy';\n  }\n\n  // Heavy rain\n  if (code === 65 || (code >= 80 && code <= 82)) {\n    return isDay ? 'rainy' : 'night-rainy';\n  }\n\n  // Snow\n  if ((code >= 71 && code <= 77) || (code >= 85 && code <= 86)) {\n    return isDay ? 'snowy' : 'night-snowy';\n  }\n\n  // Thunderstorm\n  if (code >= 95 && code <= 99) {\n    return isDay ? 'stormy' : 'night-stormy';\n  }\n\n  // Default to cloudy if unknown code\n  return isDay ? 'cloudy' : 'night-cloudy';\n}\n\n/**\n * Gets CSS variables for a specific theme\n */\nexport function getThemeVariables(theme: WeatherTheme): Record<string, string> {\n  const themeConfig = weatherThemes[theme];\n\n  return {\n    '--theme-gradient': themeConfig.gradient,\n    '--theme-text-color': themeConfig.textColor,\n    '--theme-animation-intensity': themeConfig.animationIntensity || 'medium',\n  };\n}\n\n/**\n * Generates CSS for a theme that can be injected into a style tag\n */\nexport function generateThemeCSS(theme: WeatherTheme): string {\n  const variables = getThemeVariables(theme);\n\n  return `\n    :root {\n      ${Object.entries(variables)\n        .map(([key, value]) => `${key}: ${value};`)\n        .join('\\n      ')}\n    }\n    \n    body.${theme} {\n      background: ${variables['--theme-gradient']};\n      color: ${variables['--theme-text-color']};\n    }\n  `;\n}\n\n/**\n * Determines if a theme is a night theme\n */\nexport function isNightTheme(theme: WeatherTheme): boolean {\n  return theme.startsWith('night-');\n}\n","export type WeatherTheme =\n  | 'sunny'\n  | 'night-clear'\n  | 'cloudy'\n  | 'night-cloudy'\n  | 'rainy'\n  | 'night-rainy'\n  | 'snowy'\n  | 'night-snowy'\n  | 'foggy'\n  | 'night-foggy'\n  | 'stormy'\n  | 'night-stormy';\n\ninterface ThemeConfig {\n  gradient: string;\n  textColor: string;\n  animationIntensity?: 'low' | 'medium' | 'high';\n}\n\nexport const weatherThemes: Record<WeatherTheme, ThemeConfig> = {\n  sunny: {\n    gradient: 'linear-gradient(180deg, #2196f3 0%, #42a5f5 100%)',\n    textColor: 'white',\n    animationIntensity: 'medium',\n  },\n  'night-clear': {\n    gradient: 'linear-gradient(180deg, #1a237e 0%, #3949ab 100%)',\n    textColor: 'white',\n    animationIntensity: 'low',\n  },\n  cloudy: {\n    gradient: 'linear-gradient(180deg, #78909c 0%, #90a4ae 100%)',\n    textColor: 'white',\n    animationIntensity: 'medium',\n  },\n  'night-cloudy': {\n    gradient: 'linear-gradient(180deg, #263238 0%, #37474f 100%)',\n    textColor: 'white',\n    animationIntensity: 'low',\n  },\n  rainy: {\n    gradient: 'linear-gradient(180deg, #546e7a 0%, #607d8b 100%)',\n    textColor: 'white',\n    animationIntensity: 'high',\n  },\n  'night-rainy': {\n    gradient: 'linear-gradient(180deg, #1a237e 0%, #283593 100%)',\n    textColor: 'white',\n    animationIntensity: 'medium',\n  },\n  snowy: {\n    gradient: 'linear-gradient(180deg, #b0bec5 0%, #cfd8dc 100%)',\n    textColor: '#37474f',\n    animationIntensity: 'high',\n  },\n  'night-snowy': {\n    gradient: 'linear-gradient(180deg, #37474f 0%, #455a64 100%)',\n    textColor: 'white',\n    animationIntensity: 'medium',\n  },\n  foggy: {\n    gradient: 'linear-gradient(180deg, #b0bec5 0%, #cfd8dc 100%)',\n    textColor: '#37474f',\n    animationIntensity: 'low',\n  },\n  'night-foggy': {\n    gradient: 'linear-gradient(180deg, #37474f 0%, #455a64 100%)',\n    textColor: 'white',\n    animationIntensity: 'low',\n  },\n  stormy: {\n    gradient: 'linear-gradient(180deg, #37474f 0%, #455a64 100%)',\n    textColor: 'white',\n    animationIntensity: 'high',\n  },\n  'night-stormy': {\n    gradient: 'linear-gradient(180deg, #1c1c1c 0%, #263238 100%)',\n    textColor: 'white',\n    animationIntensity: 'high',\n  },\n};\n\nimport { getThemeFromWeatherCode } from '../utils/themeUtils';\n\nexport const applyTheme = (themeOrCode: WeatherTheme | number, isDay?: boolean): void => {\n  let theme: WeatherTheme;\n\n  // Handle being called with a weather code + isDay\n  if (typeof themeOrCode === 'number') {\n    if (isDay === undefined) {\n      console.error('isDay parameter required with weather code');\n      isDay = true; // Default to day if missing\n    }\n    theme = getThemeFromWeatherCode(themeOrCode, isDay);\n  } else {\n    theme = themeOrCode as WeatherTheme;\n  }\n\n  // Add safety check to prevent the error\n  const themeConfig = weatherThemes[theme];\n\n  if (!themeConfig) {\n    console.error(`Theme \"${theme}\" not found in weatherThemes, using sunny as fallback`);\n    // Fallback to default theme\n    theme = 'sunny';\n  }\n\n  // Get the theme config (using the possible fallback)\n  const finalThemeConfig = weatherThemes[theme];\n\n  // Apply theme settings\n  document.documentElement.style.setProperty('--current-theme-gradient', finalThemeConfig.gradient);\n\n  document.documentElement.style.setProperty(\n    '--current-theme-text-color',\n    finalThemeConfig.textColor\n  );\n\n  // Remove all theme classes\n  document.body.classList.forEach((className) => {\n    if (Object.keys(weatherThemes).includes(className)) {\n      document.body.classList.remove(className);\n    }\n  });\n\n  // Add the new theme class\n  document.body.classList.add(theme);\n};\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { WeatherTheme, applyTheme } from '../styles/themes';\n\ninterface ThemeContextType {\n  applyTheme: (theme: WeatherTheme) => void;\n  currentTheme: WeatherTheme;\n}\n\nconst defaultContext: ThemeContextType = {\n  applyTheme: () => {},\n  currentTheme: 'sunny', // Default theme\n};\n\nconst ThemeContext = createContext<ThemeContextType>(defaultContext);\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState<WeatherTheme>('sunny');\n\n  const handleApplyTheme = (theme: WeatherTheme) => {\n    setCurrentTheme(theme);\n    applyTheme(theme);\n  };\n\n  // Initialize with default theme\n  useEffect(() => {\n    handleApplyTheme('sunny');\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        applyTheme: handleApplyTheme,\n        currentTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import { TemperatureUnit, WindUnit, TimeFormat } from '../context/SettingsContext';\n\n/**\n * Central configuration for the Weather App\n */\nexport const AppConfig = {\n  // Temperature thresholds (all in Celsius)\n  temperature: {\n    celsius: {\n      hot: 30,\n      warm: 26,\n      chilly: 15,\n      cold: 5,\n      freezing: 0,\n    },\n    fahrenheit: {\n      hot: 86, // 30°C\n      warm: 79, // 26°C\n      chilly: 59, // 15°C\n      cold: 41, // 5°C\n      freezing: 32, // 0°C\n    },\n  },\n\n  // Utility functions for temperature conversion\n  utils: {\n    // Convert between Celsius and Fahrenheit\n    convertTemperature: (value: number, toUnit: TemperatureUnit): number => {\n      if (toUnit === 'celsius') {\n        // If target unit is Celsius, assume input is Fahrenheit\n        return (value - 32) * (5 / 9);\n      } else {\n        // If target unit is Fahrenheit, assume input is Celsius\n        return (value * 9) / 5 + 32;\n      }\n    },\n\n    // Convert any temperature to Celsius for internal calculations\n    toCelsius: (value: number, fromUnit: TemperatureUnit): number => {\n      return fromUnit === 'celsius' ? value : (value - 32) * (5 / 9);\n    },\n\n    getUnitSymbol: (type: 'temperature' | 'wind', unit: TemperatureUnit | WindUnit): string => {\n      if (type === 'temperature') {\n        return unit === 'celsius' ? '°C' : '°F';\n      } else {\n        return unit === 'kph' ? 'km/h' : 'mph';\n      }\n    },\n\n    // Convert wind speed\n    convertWindSpeed: (value: number, toUnit: WindUnit): number => {\n      const config = AppConfig.units.wind;\n      if (toUnit === 'kph') {\n        return value;\n      } else {\n        return value * config.mph.conversionFactor;\n      }\n    },\n  },\n\n  // Get comfort level based on temperature and humidity\n  getComfortLevel: (temperature: number, humidity: number, unit: TemperatureUnit = 'celsius') => {\n    // Convert temperature to Celsius for internal calculations\n    const tempCelsius = AppConfig.utils.toCelsius(temperature, unit);\n\n    // Use Celsius thresholds for consistency\n    const thresholds = AppConfig.temperature.celsius;\n\n    if (tempCelsius > thresholds.hot && humidity > 70)\n      return { level: 'Uncomfortable', color: 'text-red-500' };\n    if (tempCelsius > thresholds.warm && humidity > 60)\n      return { level: 'Warm', color: 'text-orange-400' };\n    if (tempCelsius < thresholds.cold) return { level: 'Cold', color: 'text-blue-400' };\n    if (tempCelsius < thresholds.chilly) return { level: 'Cool', color: 'text-cyan-400' };\n    return { level: 'Comfortable', color: 'text-green-400' };\n  },\n\n  // Units configuration\n  units: {\n    temperature: {\n      celsius: {\n        symbol: '°C',\n        conversionFactor: 1,\n        offset: 0,\n      },\n      fahrenheit: {\n        symbol: '°F',\n        conversionFactor: 9 / 5,\n        offset: 32,\n      },\n    },\n    wind: {\n      kph: {\n        symbol: 'km/h',\n        conversionFactor: 1,\n      },\n      mph: {\n        symbol: 'mph',\n        conversionFactor: 0.621371,\n      },\n    },\n  },\n\n  // Weather condition categories\n  weatherConditions: {\n    sunny: [0, 1],\n    partlyCloudy: [2, 3],\n    cloudy: [4, 5, 6, 7],\n    fog: [45, 48],\n    drizzle: [51, 53, 55],\n    rain: [61, 63, 65, 80, 81, 82],\n    snow: [71, 73, 75, 77, 85, 86],\n    thunderstorm: [95, 96, 99],\n  },\n\n  // Default settings\n  defaults: {\n    temperatureUnit: 'celsius' as TemperatureUnit,\n    windUnit: 'kph' as WindUnit,\n    timeFormat: '12h' as TimeFormat,\n    reduceMotion: false,\n    highContrast: false,\n  },\n\n  // Format options\n  timeFormats: {\n    '12h': {\n      hour12: true,\n      hour: 'numeric',\n      minute: '2-digit',\n    },\n    '24h': {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n    },\n  },\n};\n","import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { AppConfig } from '../config/appConfig';\n\nexport type TemperatureUnit = 'celsius' | 'fahrenheit';\nexport type WindUnit = 'kph' | 'mph';\nexport type TimeFormat = '12h' | '24h';\n\ninterface Settings {\n  units: {\n    temperature: TemperatureUnit;\n    wind: WindUnit;\n  };\n  timeFormat: TimeFormat;\n  accessibility: {\n    reduceMotion: boolean;\n    highContrast: boolean;\n  };\n}\n\ninterface SettingsContextType {\n  settings: Settings;\n  updateSettings: (newSettings: Settings) => void;\n}\n\n// Use the defaults from our config\nconst defaultSettings: Settings = {\n  units: {\n    temperature: AppConfig.defaults.temperatureUnit,\n    wind: AppConfig.defaults.windUnit,\n  },\n  timeFormat: AppConfig.defaults.timeFormat,\n  accessibility: {\n    reduceMotion: AppConfig.defaults.reduceMotion,\n    highContrast: AppConfig.defaults.highContrast,\n  },\n};\n\nconst SettingsContext = createContext<SettingsContextType>({\n  settings: defaultSettings,\n  updateSettings: () => {},\n});\n\nexport function SettingsProvider({ children }: { children: ReactNode }) {\n  const [settings, setSettings] = useState<Settings>(() => {\n    // Load from localStorage if available\n    const savedSettings = localStorage.getItem('weatherAppSettings');\n    return savedSettings ? JSON.parse(savedSettings) : defaultSettings;\n  });\n\n  // Save settings to localStorage when they change\n  useEffect(() => {\n    localStorage.setItem('weatherAppSettings', JSON.stringify(settings));\n\n    // Apply high contrast mode to the document if enabled\n    if (settings.accessibility.highContrast) {\n      document.documentElement.classList.add('high-contrast');\n    } else {\n      document.documentElement.classList.remove('high-contrast');\n    }\n\n    // Apply reduced motion if enabled\n    if (settings.accessibility.reduceMotion) {\n      document.documentElement.classList.add('reduce-motion');\n    } else {\n      document.documentElement.classList.remove('reduce-motion');\n    }\n  }, [settings]);\n\n  // This will force components to re-render when settings change\n  useEffect(() => {\n    console.log('Settings updated:', settings);\n  }, [settings]);\n\n  const updateSettings = (newSettings: Settings) => {\n    setSettings(newSettings);\n  };\n\n  return (\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport function useSettings() {\n  const context = useContext(SettingsContext);\n  if (context === undefined) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n}\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface UIContextProps {\n  // Animation settings\n  animationIntensity: number;\n  setAnimationIntensity: (intensity: number) => void;\n\n  // Reduced motion preference\n  reducedMotion: boolean;\n\n  // High contrast mode\n  highContrast: boolean;\n  toggleHighContrast: () => void;\n\n  // UI density\n  compactMode: boolean;\n  toggleCompactMode: () => void;\n\n  // UI accent color\n  accentColor: string;\n  setAccentColor: (color: string) => void;\n\n  // Loading state\n  isLoading: boolean;\n  setIsLoading: (loading: boolean) => void;\n\n  // Toast notifications\n  showToast: (message: string, type?: 'info' | 'success' | 'warning' | 'error') => void;\n}\n\nconst UIContext = createContext<UIContextProps | undefined>(undefined);\n\nexport const useUI = () => {\n  const context = useContext(UIContext);\n  if (!context) {\n    throw new Error('useUI must be used within a UIProvider');\n  }\n  return context;\n};\n\ninterface UIProviderProps {\n  children: ReactNode;\n}\n\nexport const UIProvider: React.FC<UIProviderProps> = ({ children }) => {\n  // Animation settings\n  const [animationIntensity, setAnimationIntensity] = useState(1);\n\n  // Reduced motion preference from system\n  const [reducedMotion, setReducedMotion] = useState(false);\n\n  // High contrast mode\n  const [highContrast, setHighContrast] = useState(false);\n\n  // Compact UI mode\n  const [compactMode, setCompactMode] = useState(false);\n\n  // Accent color\n  const [accentColor, setAccentColor] = useState('#0ea5e9');\n\n  // App loading state\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Toast messages\n  const [toasts, setToasts] = useState<\n    Array<{\n      id: number;\n      message: string;\n      type: 'info' | 'success' | 'warning' | 'error';\n    }>\n  >([]);\n\n  // Check for system reduced motion preference\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setReducedMotion(prefersReducedMotion.matches);\n\n    const handleChange = (event: MediaQueryListEvent) => {\n      setReducedMotion(event.matches);\n    };\n\n    prefersReducedMotion.addEventListener('change', handleChange);\n    return () => {\n      prefersReducedMotion.removeEventListener('change', handleChange);\n    };\n  }, []);\n\n  // Apply reduced motion setting\n  useEffect(() => {\n    if (reducedMotion) {\n      document.documentElement.classList.add('reduce-motion');\n      document.documentElement.style.setProperty('--animation-speed', '0.5');\n      document.documentElement.style.setProperty('--animation-intensity', '0.5');\n    } else {\n      document.documentElement.classList.remove('reduce-motion');\n      document.documentElement.style.setProperty('--animation-speed', '1');\n      document.documentElement.style.setProperty(\n        '--animation-intensity',\n        String(animationIntensity)\n      );\n    }\n  }, [reducedMotion, animationIntensity]);\n\n  // Toggle high contrast mode\n  const toggleHighContrast = () => {\n    const newValue = !highContrast;\n    setHighContrast(newValue);\n\n    if (newValue) {\n      document.documentElement.classList.add('high-contrast');\n    } else {\n      document.documentElement.classList.remove('high-contrast');\n    }\n  };\n\n  // Toggle compact mode\n  const toggleCompactMode = () => {\n    const newValue = !compactMode;\n    setCompactMode(newValue);\n\n    if (newValue) {\n      document.documentElement.classList.add('compact-ui');\n    } else {\n      document.documentElement.classList.remove('compact-ui');\n    }\n  };\n\n  // Show toast notification\n  const showToast = (message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info') => {\n    const id = Date.now();\n    setToasts((prev) => [...prev, { id, message, type }]);\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      setToasts((prev) => prev.filter((toast) => toast.id !== id));\n    }, 5000);\n  };\n\n  // Set accent color and update CSS variables\n  const handleSetAccentColor = (color: string) => {\n    setAccentColor(color);\n    document.documentElement.style.setProperty('--color-accent', color);\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        animationIntensity,\n        setAnimationIntensity,\n        reducedMotion,\n        highContrast,\n        toggleHighContrast,\n        compactMode,\n        toggleCompactMode,\n        accentColor,\n        setAccentColor: handleSetAccentColor,\n        isLoading,\n        setIsLoading,\n        showToast,\n      }}\n    >\n      {children}\n\n      {/* Toast notifications container */}\n      {toasts.length > 0 && (\n        <div className=\"fixed bottom-4 right-4 z-50 flex flex-col gap-2\">\n          {toasts.map((toast) => (\n            <div\n              key={toast.id}\n              className={`px-4 py-2 rounded-md shadow-lg animate-fade-in text-white ${\n                toast.type === 'success'\n                  ? 'bg-green-500'\n                  : toast.type === 'error'\n                  ? 'bg-red-500'\n                  : toast.type === 'warning'\n                  ? 'bg-yellow-500'\n                  : 'bg-blue-500'\n              }`}\n            >\n              {toast.message}\n            </div>\n          ))}\n        </div>\n      )}\n    </UIContext.Provider>\n  );\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useEffect, useState } from 'react';\nimport styles from './WeatherLoadingScreen.module.css';\n\ninterface WeatherLoadingScreenProps {\n  isLoading: boolean;\n}\n\nexport default function WeatherLoadingScreen({ isLoading }: WeatherLoadingScreenProps) {\n  // Don't show loading overlay during Cypress tests\n  if (typeof window !== 'undefined' && window.Cypress) {\n    return null;\n  }\n\n  const [fadeOut, setFadeOut] = useState(false);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    if (!isLoading) {\n      setFadeOut(true);\n      const timer = setTimeout(() => {\n        setHidden(true);\n      }, 600);\n      return () => clearTimeout(timer);\n    }\n  }, [isLoading]);\n\n  if (hidden) return null;\n\n  return (\n    <div className={`${styles.loadingScreen} ${fadeOut ? styles.fadeOut : ''}`}>\n      <div className={styles.ambientBackground}>\n        <div className=\"cloud cloud-1\"></div>\n        <div className=\"cloud cloud-2\"></div>\n        <div className=\"cloud cloud-3\"></div>\n        <div className=\"rain-container\">\n          {[...Array(20)].map((_, i) => (\n            <div\n              key={i}\n              className=\"raindrop\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                animationDuration: `${0.5 + Math.random() * 0.7}s`,\n                animationDelay: `${Math.random() * 2}s`,\n              }}\n            ></div>\n          ))}\n        </div>\n      </div>\n\n      <div className={styles.loadingContent}>\n        <div className=\"app-logo mb-6\">\n          <div className=\"logo-icon\">\n            <div className=\"sun-circle\"></div>\n            <div className=\"cloud-shape\"></div>\n          </div>\n          <h1 className=\"text-2xl font-semibold text-white text-center\">Weather App</h1>\n        </div>\n\n        <div className={styles.loadingSpinner}>\n          <div className={styles.spinnerRing}></div>\n          <div className={styles.spinnerRing}></div>\n          <div className={styles.spinnerRing}></div>\n          <div className={styles.spinnerRing}></div>\n        </div>\n\n        <div className={styles.loadingBar}>\n          <div className={styles.loadingProgress}></div>\n        </div>\n\n        <p className=\"text-white/80 text-sm mt-2\">Loading weather data...</p>\n      </div>\n    </div>\n  );\n}\n","import { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        this.props.fallback || (\n          <div className=\"p-6 max-w-sm mx-auto bg-white/10 backdrop-blur-lg rounded-xl shadow-md flex flex-col items-center text-white mt-8\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-12 w-12 text-red-400 mb-4\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            <h3 className=\"text-xl font-medium\">Something went wrong</h3>\n            <p className=\"text-sm text-white/80 mt-2 text-center\">\n              We're having trouble displaying this content. Please try refreshing the page.\n            </p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"mt-4 px-4 py-2 bg-blue-500 hover:bg-blue-600 rounded-lg transition-colors\"\n            >\n              Refresh\n            </button>\n          </div>\n        )\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { useEffect, useState, Suspense, lazy } from 'react';\nimport { WeatherProvider } from './context/WeatherContext';\nimport { ThemeProvider } from './context/ThemeContext';\nimport { SettingsProvider } from './context/SettingsContext';\nimport { LocationProvider } from './context/LocationContext';\nimport { UIProvider } from './context/UIContext';\nimport WeatherLoadingScreen from './components/common/WeatherLoadingScreen';\nimport ErrorBoundary from './components/common/ErrorBoundary';\n\n// import {\n//   initializeAllMonitoring,\n//   markPerformance,\n//   measureBetweenMarks,\n// } from \"./utils/performance\";\n\n// Lazy load components\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst Footer = lazy(() => import('./components/layout/Footer'));\nconst PrivacyPolicyModal = lazy(() => import('./components/PrivacyPolicyModal'));\n\ninterface AppContentProps {\n  initialLoading: boolean;\n  privacyModalVisible: boolean;\n  setPrivacyModalVisible: (visible: boolean) => void;\n}\n\nfunction App() {\n  const [privacyModalVisible, setPrivacyModalVisible] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n\n  useEffect(() => {\n    // Initialize performance monitoring\n    // initializeAllMonitoring();\n\n    // Mark the start of app initialization\n    // markPerformance(\"app-mount-start\");\n\n    // Check if it's the first visit\n    const hasAcceptedPrivacy = localStorage.getItem('privacyPolicyAccepted');\n    if (!hasAcceptedPrivacy) {\n      setPrivacyModalVisible(true);\n    }\n\n    // Update theme-color meta tag\n    const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n    if (metaThemeColor) {\n      metaThemeColor.setAttribute('content', '#0ea5e9');\n    } else {\n      const meta = document.createElement('meta');\n      meta.name = 'theme-color';\n      meta.content = '#0ea5e9';\n      document.head.appendChild(meta);\n    }\n\n    // Remove artificial loading delay, set loading to false immediately\n    setInitialLoading(false);\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <ThemeProvider>\n        <SettingsProvider>\n          <LocationProvider>\n            <WeatherProvider>\n              <UIProvider>\n                <AppContent\n                  initialLoading={initialLoading}\n                  privacyModalVisible={privacyModalVisible}\n                  setPrivacyModalVisible={setPrivacyModalVisible}\n                />\n              </UIProvider>\n            </WeatherProvider>\n          </LocationProvider>\n        </SettingsProvider>\n      </ThemeProvider>\n    </ErrorBoundary>\n  );\n}\n\nfunction AppContent({\n  initialLoading,\n  privacyModalVisible,\n  setPrivacyModalVisible,\n}: AppContentProps) {\n  return (\n    <>\n      <WeatherLoadingScreen isLoading={initialLoading} />\n      <div className=\"flex flex-col min-h-screen relative\">\n        <main className=\"flex-grow overflow-y-auto\">\n          <ErrorBoundary>\n            <Suspense\n              fallback={\n                <div className=\"flex items-center justify-center h-64\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white\"></div>\n                </div>\n              }\n            >\n              <HomePage />\n            </Suspense>\n          </ErrorBoundary>\n        </main>\n        <Footer onShowPrivacyModal={() => setPrivacyModalVisible(true)} />\n        <PrivacyPolicyModal\n          visible={privacyModalVisible}\n          onClose={() => {\n            setPrivacyModalVisible(false);\n            localStorage.setItem('privacyPolicyAccepted', 'true');\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './global.css';\nimport App from './App.tsx';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\n// Disable all console output and alerts\nconsole.log = () => {};\nconsole.warn = () => {};\nconsole.error = () => {};\nwindow.alert = () => {};\n\n// Removed Sentry integration; will use alternate monitoring service later\n\n// Make sure the root element exists\nconst rootElement = document.getElementById('root');\n\nif (!rootElement) {\n  throw new Error(\n    \"Root element not found. Make sure there is an element with id 'root' in your HTML.\"\n  );\n}\n\nconst queryClient = new QueryClient();\ncreateRoot(rootElement).render(\n  <StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </StrictMode>\n);\n"],"file":"assets/index-DTftDQDB.js"}